# -*- coding: utf-8 -*-
# |macros_save_PNG

import pythoncom
from win32com.client import Dispatch, gencache

#  Подключим константы API Компас
kompas6_constants = gencache.EnsureModule("{75C9F5D0-B5B8-4526-8681-9903C567D2ED}", 0, 1, 0).constants
kompas6_constants_3d = gencache.EnsureModule("{2CAF168C-7961-4B90-9DA2-701419BEEFE3}", 0, 1, 0).constants

#  Подключим описание интерфейсов API5
kompas6_api5_module = gencache.EnsureModule("{0422828C-F174-495E-AC5D-D31014DBBE87}", 0, 1, 0)
kompas_object = kompas6_api5_module.KompasObject(
    Dispatch("Kompas.Application.5")._oleobj_.QueryInterface(kompas6_api5_module.KompasObject.CLSID,
                                                             pythoncom.IID_IDispatch))

#  Подключим описание интерфейсов API7
kompas_api7_module = gencache.EnsureModule("{69AC2981-37C0-4379-84FD-5DD2F3C0A520}", 0, 1, 0)
application_api7 = kompas_api7_module.IApplication(
    Dispatch("Kompas.Application.7")._oleobj_.QueryInterface(kompas_api7_module.IApplication.CLSID,
                                                             pythoncom.IID_IDispatch))
#  Получим активный документ через API7
kompas_document = application_api7.ActiveDocument

file_PNG = kompas_document.PathName[:-4] + ".png"
# Сохраняем в PNG через API5
# получаем указатель на интерфейс графического документа ksDocument2D.
ksDocument2D = kompas_object.ActiveDocument2D()
# получаем интерфейс ksRasterFormatParam
ksRasterFormatParam = ksDocument2D.RasterFormatParam()
ksRasterFormatParam.Init()
# Цветность растра
ksRasterFormatParam.colorBPP = 1  # 1 - монохромный
ksRasterFormatParam.extResolution = 600  # Разрешение, точек на дюйм
ksRasterFormatParam.extScale = 1.0
ksRasterFormatParam.format = 3  # 3 - PNG
ksDocument2D.SaveAsToRasterFormat(file_PNG, ksRasterFormatParam)
